// automatically generated by the FlatBuffers compiler, do not modify


#ifndef FLATBUFFERS_GENERATED_REFERENCE_RN_H_
#define FLATBUFFERS_GENERATED_REFERENCE_RN_H_

#include "flatbuffers/flatbuffers.h"

// Ensure the included flatbuffers.h is the same version as when this file was
// generated, otherwise it may not be compatible.
static_assert(FLATBUFFERS_VERSION_MAJOR == 24 &&
              FLATBUFFERS_VERSION_MINOR == 3 &&
              FLATBUFFERS_VERSION_REVISION == 25,
             "Non-compatible flatbuffers version included");

namespace rn {

struct Reference;

FLATBUFFERS_MANUALLY_ALIGNED_STRUCT(4) Reference FLATBUFFERS_FINAL_CLASS {
 private:
  uint32_t identifier_;

 public:
  Reference()
      : identifier_(0) {
  }
  Reference(uint32_t _identifier)
      : identifier_(::flatbuffers::EndianScalar(_identifier)) {
  }
  uint32_t identifier() const {
    return ::flatbuffers::EndianScalar(identifier_);
  }
};
FLATBUFFERS_STRUCT_END(Reference, 4);

}  // namespace rn

#endif  // FLATBUFFERS_GENERATED_REFERENCE_RN_H_
