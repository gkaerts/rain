#usda 1.0
(
    defaultPrim = "Material"
)

def Material "Material" (
    assetInfo = {
        asset identifier = @material.usda@
        string name = "Material"
    }
    kind = "component"
    prepend apiSchemas = ["RainMaterialAPI"]
) {
    # Actual asset stuffs!
    def Scope "Textures"
    {
        def "Color" (
                references = @../textures/texture.usda@
            ) {}
    }

    def Scope "Params"
    {
        def MaterialParamTexture "ColorTexture"
        {
            rel value = </Material/Textures/Color> 
        }

        def MaterialParamFloatVec "Color"
        {
            uniform float[] value = [0.5, 0.5, 0.5, 1.0]
        }
    }

    uniform asset rn:shader = @../material_shaders/material_shader.usda@
    rel rn:parameters = [
        </Material/Params/ColorTexture>,
        </Material/Params/Color>
    ]

    # Preview shader stuffs!
    def Scope "Preview"
    {
        def Shader "Shader"
        {
            uniform token info:id = "UsdPreviewSurface"
            color3f inputs:diffuseColor.connect = </Material/Preview/Texture.outputs:rgb>
            float inputs:metallic = 0
            float inputs:roughness = 0.4
            token outputs:surface
        }

        def Shader "STReader"
        {
            uniform token info:id = "UsdPrimvarReader_float2"
            string inputs:varname.connect = </Material.inputs:frame:stPrimvarName>
            float2 outputs:result
        }

        def Shader "Texture"
        {
            uniform token info:id = "UsdUVTexture"
            asset inputs:file.connect = </Material/Textures/Color.file>
            float2 inputs:st.connect = </Material/Preview/STReader.outputs:result>
            token inputs:wrapS = "repeat"
            token inputs:wrapT = "repeat"
            float3 outputs:rgb
        }
    }
    
    token inputs:frame:stPrimvarName = "st"
    token outputs:surface.connect = </Material/Preview/Shader.outputs:surface>

}