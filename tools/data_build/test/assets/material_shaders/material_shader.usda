#usda 1.0
(
    defaultPrim = "MaterialShader"
)

def MaterialShader "MaterialShader" (
    assetInfo = {
        asset identifier = @material_shader.usda@
        string name = "MaterialShader"
    }
    kind = "component"
)
{
    uniform asset source = @material_shader.hlsl@

    uniform string[] defines = []
    uniform string[] includeDirs = [
        "../../../../../libs/rhi/include",
        "../../../../../libs/render/include",
        "../../../../../libs/render/shaders"
    ]

    rel renderPasses = [
        </MaterialShader/Passes/ForwardPass>
    ]

    rel paramGroups = [
        </MaterialShader/DefaultParameters>
    ]

    def Scope "Passes"
    {

        def VertexRasterPass "ForwardPass"
        {
            uniform token engineRenderPass = "Forward"
            uniform token vertexShader = "vs_main"
            uniform token pixelShader = "ps_main"
        }
    }

    def Scope "Textures"
    {
        def "Color" (
            references = @../textures/texture.usda@
        ) {}
    }

    def MaterialShaderParamGroup "DefaultParameters"
    {
        rel parameters = [
            </MaterialShader/DefaultParameters/ColorTexture>,
            </MaterialShader/DefaultParameters/Color>
        ]

        def MaterialShaderParamTexture "ColorTexture"
        {
            uniform token dimension = "2D"
            uniform token hlslParam = "colorTexture"
            rel defaultValue = </MaterialShader/Textures/Color>
        }

        def MaterialShaderParamFloatVec "Color"
        {
            uniform uint dimension = 4
            uniform token hlslParam = "colorBlend"
            uniform float[] defaultValue = [1.0, 1.0, 1.0, 1.0]
            uniform float[] minValue = [0.0, 0.0, 0.0, 0.0]
            uniform float[] maxValue = [1.0, 1.0, 1.0, 1.0]
        }
    }

}